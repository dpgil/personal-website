{"version":3,"sources":["img/ava_square.png","img/chimpanzee_square.jpeg","img/cockatoo_square.jpeg","img/crow_square.jpeg","img/female-body_square.jpeg","img/female-portrait_square.jpeg","img/flower_square.png","img/frog_square.jpeg","img/hand2_square.jpeg","img/jellyfish_square.jpeg","img/mask_square.jpg","img/mushroom_square.jpg","img/mushrooms_square.jpg","img/orange_square.jpg","img/owl_square.jpg","img/peacock_square.jpg","img/skull_square.jpg","pages/Page.ts","pages/ImageBlock.styles.tsx","pages/ImageBlock.tsx","img/index.ts","pages/ArtPage.tsx","pages/CodePage.tsx","pages/LandingPage.tsx","pages/MePage.tsx","view/NavOption.tsx","routes/index.tsx","view/AppBody.tsx","view/AppHeader.tsx","view/NavOptions.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","Page","imageBlockStyle","display","padding","getImageStyle","hover","maxWidth","opacity","imageOverlayStyle","position","width","height","zIndex","overlayTextStyle","top","fontStyle","fontFamily","fontSize","ImageBlock","props","image","React","useState","setHover","style","onMouseEnter","onMouseLeave","name","src","alt","ImageOverlay","images","ava","year","chimpanzee","cockatoo","crow","femaleBody","femalePortrait","flower","frog","hand","jellyfish","mask","mushroom","mushrooms","orange","owl","peacock","skull","ArtPage","Grid","map","i","key","CodePage","LandingPage","MePage","ClickState","Routes","Home","path","bodyStyle","marginTop","AppBody","headerStyle","marginBottom","wrapperStyle","borderBottom","margin","AppHeader","window","location","pathname","ART","CODE","ME","LANDING","getSelectedPage","selectedPage","setSelectedPage","hoverStyle","color","clickStyle","defaultStyle","getNavOptionStyle","clickState","isSelected","HOVER","CLICK","linkStyle","textDecoration","NavOption","DEFAULT","setClickState","onMouseDown","onMouseUp","onClick","onTouchEnd","to","route","nameStyle","fontWeight","navOptionsStyle","NavOptions","useStyles","makeStyles","root","textAlign","backgroundColor","minHeight","flexDirection","alignItems","App","classes","className","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c107f7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ava_square.fb38a14f.png\";","module.exports = __webpack_public_path__ + \"static/media/chimpanzee_square.d6c5a441.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cockatoo_square.f918f5a1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/crow_square.59589005.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/female-body_square.a56a5232.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/female-portrait_square.c4e8cbbb.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/flower_square.12bf63c5.png\";","module.exports = __webpack_public_path__ + \"static/media/frog_square.26d5a2eb.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hand2_square.709c61f9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/jellyfish_square.3787a235.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/mask_square.6a1a8e2f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mushroom_square.20e6663c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mushrooms_square.b017a80e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/orange_square.828f5e3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/owl_square.7c7b61ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/peacock_square.0f3b6b8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skull_square.e43d2b0f.jpg\";","export enum Page {\n  LANDING,\n  ART,\n  CODE,\n  ME\n}\n","import React from \"react\";\n\nconst imageBlockWidth = \"400px\";\n\nexport const imageBlockStyle: React.CSSProperties = {\n  display: \"inline-block\",\n  padding: \"5px\"\n};\n\nexport const getImageStyle = (hover: boolean): React.CSSProperties => {\n  return {\n    maxWidth: imageBlockWidth,\n    opacity: hover ? 0.2 : 1\n  };\n};\n\nexport const imageOverlayStyle: React.CSSProperties = {\n  position: \"absolute\",\n  width: imageBlockWidth,\n  height: imageBlockWidth,\n  zIndex: 1\n};\n\nexport const overlayTextStyle: React.CSSProperties = {\n  position: \"relative\",\n  top: \"45%\",\n  fontStyle: \"oblique\",\n  fontFamily: \"serif\",\n  fontSize: 30\n};\n","import React from \"react\";\nimport { Image } from \"../img\";\nimport {\n  getImageStyle,\n  imageBlockStyle,\n  imageOverlayStyle,\n  overlayTextStyle\n} from \"./ImageBlock.styles\";\n\ninterface ImageBlockProps {\n  image: Image;\n}\n\nexport const ImageBlock: React.FC<ImageBlockProps> = props => {\n  const { image } = props;\n  const [hover, setHover] = React.useState<boolean>(false);\n\n  const onMouseEnter = () => {\n    setHover(true);\n  };\n\n  const onMouseLeave = () => {\n    setHover(false);\n  };\n\n  return (\n    <div\n      style={imageBlockStyle}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      {hover && <ImageOverlay name={image.name} />}\n      <img style={getImageStyle(hover)} src={image.src} alt={image.name} />\n    </div>\n  );\n};\n\ninterface ImageOverlayProps {\n  name: string;\n}\n\nconst ImageOverlay: React.FC<ImageOverlayProps> = props => {\n  return (\n    <div style={imageOverlayStyle}>\n      <div style={overlayTextStyle}>{props.name}</div>\n    </div>\n  );\n};\n","import ava from \"./ava_square.png\";\nimport chimpanzee from \"./chimpanzee_square.jpeg\";\nimport cockatoo from \"./cockatoo_square.jpeg\";\nimport crow from \"./crow_square.jpeg\";\nimport femaleBody from \"./female-body_square.jpeg\";\nimport femalePortrait from \"./female-portrait_square.jpeg\";\nimport flower from \"./flower_square.png\";\nimport frog from \"./frog_square.jpeg\";\nimport hand from \"./hand2_square.jpeg\";\nimport jellyfish from \"./jellyfish_square.jpeg\";\nimport mask from \"./mask_square.jpg\";\nimport mushroom from \"./mushroom_square.jpg\";\nimport mushrooms from \"./mushrooms_square.jpg\";\nimport orange from \"./orange_square.jpg\";\nimport owl from \"./owl_square.jpg\";\nimport peacock from \"./peacock_square.jpg\";\nimport skull from \"./skull_square.jpg\";\n\nexport type Image = { name: string; src: string; year: number };\n\nexport const images: Image[] = [\n  { name: \"Ava\", src: ava, year: 2019 },\n  { name: \"Chimpanzee\", src: chimpanzee, year: 2018 },\n  { name: \"Cockatoo\", src: cockatoo, year: 2019 },\n  { name: \"Crow\", src: crow, year: 2018 },\n  { name: \"Body\", src: femaleBody, year: 2019 },\n  { name: \"Gaze\", src: femalePortrait, year: 2018 },\n  { name: \"Flower\", src: flower, year: 2019 },\n  { name: \"Frog\", src: frog, year: 2019 },\n  { name: \"Hand\", src: hand, year: 2018 },\n  { name: \"Jellyfish\", src: jellyfish, year: 2018 },\n  { name: \"Mask\", src: mask, year: 2019 },\n  { name: \"Mushroom\", src: mushroom, year: 2019 },\n  { name: \"Fungi\", src: mushrooms, year: 2019 },\n  { name: \"Orange\", src: orange, year: 2019 },\n  { name: \"Owl\", src: owl, year: 2018 },\n  { name: \"Peacock\", src: peacock, year: 2019 },\n  { name: \"Skull\", src: skull, year: 2019 }\n];\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ImageBlock } from \"./ImageBlock\";\nimport { images } from \"../img\";\n\nexport const ArtPage: React.FC = () => {\n  return (\n    <div>\n      <Grid>\n        {images.map(i => (\n          <ImageBlock key={i.name} image={i} />\n        ))}\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const CodePage: React.FC = () => {\n  return <div>code page</div>;\n};\n","import React from \"react\";\n\nexport const LandingPage: React.FC = () => {\n  return <div>landing page</div>;\n};\n","import React from \"react\";\n\nexport const MePage: React.FC = () => {\n  return <div>me page</div>;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nenum ClickState {\n  DEFAULT,\n  HOVER,\n  CLICK\n}\n\nconst hoverStyle: React.CSSProperties = {\n  color: \"#a0a0a0\"\n};\n\nconst clickStyle: React.CSSProperties = {\n  color: \"#c0c0c0\"\n};\n\nconst defaultStyle: React.CSSProperties = {\n  color: \"black\"\n};\n\nconst getNavOptionStyle = (\n  clickState: ClickState,\n  isSelected: boolean\n): React.CSSProperties => {\n  switch (clickState) {\n    case ClickState.HOVER:\n      return hoverStyle;\n    case ClickState.CLICK:\n      return clickStyle;\n    default:\n      return isSelected ? hoverStyle : defaultStyle;\n  }\n};\n\nconst linkStyle: React.CSSProperties = {\n  textDecoration: \"none\",\n  color: \"inherit\"\n};\n\ninterface NavOptionProps {\n  route: { path: string; name: string };\n  isSelected: boolean;\n  onClick?: () => void;\n}\n\n// todo: add hover and click styling\nexport const NavOption: React.FC<NavOptionProps> = props => {\n  const [clickState, setClickState] = React.useState<ClickState>(\n    ClickState.DEFAULT\n  );\n\n  const onMouseEnter = () => {\n    setClickState(ClickState.HOVER);\n  };\n\n  const onMouseLeave = () => {\n    setClickState(ClickState.DEFAULT);\n  };\n\n  const onMouseDown = () => {\n    setClickState(ClickState.CLICK);\n  };\n\n  const onMouseUp = () => {\n    setClickState(ClickState.HOVER);\n\n    if (props.onClick) {\n      props.onClick();\n    }\n  };\n\n  return (\n    <span\n      style={getNavOptionStyle(clickState, props.isSelected)}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onTouchEnd={() => setClickState(ClickState.DEFAULT)}\n    >\n      <Link style={linkStyle} to={props.route.path}>\n        {props.route.name}\n      </Link>\n    </span>\n  );\n};\n","export const Routes = {\n  Home: {\n    path: \"/\",\n    name: \"DANIEL GIL\"\n  },\n  ArtPage: {\n    path: \"/art\",\n    name: \"art\"\n  },\n  CodePage: {\n    path: \"/code\",\n    name: \"code\"\n  },\n  MePage: {\n    path: \"/me\",\n    name: \"me\"\n  }\n};\n","import React from \"react\";\nimport { ArtPage, CodePage, LandingPage, MePage } from \"../pages\";\nimport { Route, Switch } from \"react-router\";\nimport { Routes } from \"../routes\";\n\nconst bodyStyle: React.CSSProperties = {\n  marginTop: \"5px\"\n};\n\nexport const AppBody: React.FC = () => {\n  return (\n    <div style={bodyStyle}>\n      {\n        <Switch>\n          <Route path={Routes.ArtPage.path}>\n            <ArtPage />\n          </Route>\n          <Route path={Routes.CodePage.path}>\n            <CodePage />\n          </Route>\n          <Route path={Routes.MePage.path}>\n            <MePage />\n          </Route>\n          <Route path={Routes.Home.path}>\n            <LandingPage />\n          </Route>\n        </Switch>\n      }\n    </div>\n  );\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { NavOptions } from \"./\";\nimport { Page } from \"../pages\";\nimport { Routes } from \"../routes\";\n\nconst headerStyle: React.CSSProperties = {\n  padding: \"10px 0px\",\n  marginBottom: \"2px\",\n  fontFamily: \"Helvetica,Verdana,sans-serif\"\n};\n\nconst wrapperStyle: React.CSSProperties = {\n  display: \"inline-block\",\n  borderBottom: \"solid\",\n  padding: \"5px 0px\",\n  margin: \"0px 10px\"\n};\n\nconst getSelectedPage = (): Page => {\n  const path = window.location.pathname;\n  switch (path) {\n    case Routes.ArtPage.path:\n      return Page.ART;\n    case Routes.CodePage.path:\n      return Page.CODE;\n    case Routes.MePage.path:\n      return Page.ME;\n    default:\n      return Page.LANDING;\n  }\n};\n\nexport const AppHeader: React.FC = () => {\n  const [selectedPage, setSelectedPage] = React.useState<Page>(\n    getSelectedPage()\n  );\n\n  return (\n    <div style={headerStyle}>\n      <Grid>\n        <div style={wrapperStyle}>\n          <NavOptions\n            selectedPage={selectedPage}\n            setSelectedPage={setSelectedPage}\n          />\n        </div>\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavOption } from \"./\";\nimport { Page } from \"../pages\";\nimport { Routes } from \"../routes\";\n\nconst separator = \" / \";\n\nconst nameStyle: React.CSSProperties = {\n  fontSize: \"45px\",\n  fontWeight: \"bold\",\n  display: \"inline-block\",\n  padding: \"0px 10px\"\n};\n\nconst navOptionsStyle: React.CSSProperties = {\n  padding: \"0px 10px\",\n  display: \"inline-block\",\n  fontSize: \"28px\"\n};\n\ninterface NavOptionsProps {\n  selectedPage: Page;\n  setSelectedPage: (page: Page) => void;\n}\n\nexport const NavOptions: React.FC<NavOptionsProps> = props => {\n  const { selectedPage, setSelectedPage } = props;\n\n  return (\n    <div>\n      <span style={nameStyle}>\n        <NavOption\n          onClick={() => setSelectedPage(Page.LANDING)}\n          isSelected={false}\n          route={Routes.Home}\n        />\n      </span>\n      <div style={navOptionsStyle}>\n        <NavOption\n          onClick={() => setSelectedPage(Page.ART)}\n          isSelected={selectedPage === Page.ART}\n          route={Routes.ArtPage}\n        />\n        {separator}\n        <NavOption\n          onClick={() => setSelectedPage(Page.CODE)}\n          isSelected={selectedPage === Page.CODE}\n          route={Routes.CodePage}\n        />\n        {separator}\n        <NavOption\n          onClick={() => setSelectedPage(Page.ME)}\n          isSelected={selectedPage === Page.ME}\n          route={Routes.MePage}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBody, AppHeader } from \"./view\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"center\",\n    backgroundColor: \"#fff\",\n    minHeight: \"100vh\",\n    // display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    fontSize: \"calc(10px + 2vmin)\",\n    color: \"black\"\n  }\n});\n\nexport const App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <AppHeader />\n        <AppBody />\n      </div>\n    </Router>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}